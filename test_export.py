#!/usr/bin/env python3
"""
Test script to check what files are generated by Marimo export.
This helps diagnose GitHub Pages deployment issues.
"""

import os
import subprocess
import shutil
import glob

def main():
    # Create a temporary directory for the test
    test_dir = "marimo_export_test"
    if os.path.exists(test_dir):
        shutil.rmtree(test_dir)
    os.makedirs(test_dir)
    
    try:
        # Run the marimo export command
        print(f"Running marimo export to {test_dir}...")
        cmd = f"marimo export html-wasm surface_plot_app.py -o {test_dir} --mode run"
        print(f"Command: {cmd}")
        
        result = subprocess.run(
            cmd, 
            shell=True, 
            stdout=subprocess.PIPE, 
            stderr=subprocess.PIPE,
            text=True
        )
        
        print("\n-- COMMAND OUTPUT --")
        print(f"Exit code: {result.returncode}")
        print("STDOUT:")
        print(result.stdout)
        print("STDERR:")
        print(result.stderr)
        
        # Check what files were generated
        print("\n-- GENERATED FILES --")
        all_files = []
        for root, dirs, files in os.walk(test_dir):
            for file in files:
                path = os.path.join(root, file)
                rel_path = os.path.relpath(path, test_dir)
                all_files.append(rel_path)
                if file.endswith(".html"):
                    print(f"HTML file: {rel_path}")
        
        print("\nALL FILES:")
        for file in sorted(all_files):
            print(f"- {file}")
        
        # Analyze possible index files
        print("\n-- POTENTIAL APP ENTRY POINTS --")
        html_files = [f for f in all_files if f.endswith(".html")]
        if html_files:
            print("Found HTML files:")
            for html_file in html_files:
                print(f"- {html_file}")
            
            # Check if any of them look like they might be the main app
            main_candidates = [
                f for f in html_files 
                if any(name in f.lower() for name in ["index", "app", "main", "marimo"])
            ]
            
            if main_candidates:
                print("\nLikely main app files:")
                for candidate in main_candidates:
                    print(f"- {candidate}")
            else:
                print("\nNo obvious main app file found, first HTML might be the entry point.")
        else:
            print("No HTML files found!")
    
    finally:
        # Clean up
        print(f"\nTest files located at: {os.path.abspath(test_dir)}")
        print("(Not deleting test files for inspection)")

if __name__ == "__main__":
    main() 