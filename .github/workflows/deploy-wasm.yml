name: Deploy Marimo WASM App to GitHub Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual triggering

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: 📄 Export notebook to WASM
        run: |
          # Clear any existing build directory
          rm -rf build
          mkdir -p build
          
          # Export the notebook to WASM
          echo "Running marimo export..."
          marimo export html-wasm surface_plot_app.py -o build --mode run
          
          # Check the generated files
          echo "Files in build directory:"
          ls -la build/
          
          # Important: Marimo export generates its own index.html
          # We'll inspect it and decide if we need to use our custom one
          if [ -f build/index.html ]; then
            echo "Marimo generated an index.html file"
            # Make a backup of the original Marimo index.html
            mv build/index.html build/marimo_index.html
            # Copy our custom index.html that handles redirects
            cp index.html build/index.html
          else
            echo "No index.html was generated by Marimo - this is unexpected!"
          fi
          
          # Final check of build directory after our modifications
          echo "Final build directory contents:"
          ls -la build/

      - name: 🚀 Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      - name: 📦 Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
      - name: 🌐 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 